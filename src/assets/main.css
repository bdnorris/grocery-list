@import './base.css';

#app {
  max-width: 1280px;
  margin: 0 auto;
  padding: var(--space-m);
  font-weight: normal;
}

@media (hover: hover) {
  a:hover {
    background-color: hsla(160, 100%, 37%, 0.2);
  }
}


h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-family);
  font-weight: 500;
  margin: 0;
  padding: 0;
  line-height: var(--globalLineHeight);
}

h1 {
  font-size: var(--text-xl);
  /* line-height: calc(var(--text-xl) + var(--globalLineHeight)); */
}
h2 {
  font-size: var(--text-l);
  /* line-height: calc(var(--text-l) + var(--globalLineHeight)); */
}
h3 {
  font-size: var(--text-m);
  /* line-height: calc(var(--text-m) + var(--globalLineHeight)); */
}
h4 {
  font-size: var(--text-s);
  /* line-height: calc(var(--text-s) + var(--globalLineHeight)); */
}
h5 {
  font-size: var(--text-xs);
  /* line-height: calc(var(--text-xs) + var(--globalLineHeight)); */
}
h6 {
  font-size: var(--text-xs);
  /* line-height: calc(var(--text-xs) + var(--globalLineHeight)); */
}

button, .button {
  background-image: none;
  background-color: transparent;
  border-radius: 0;
  box-shadow: none;
  -webkit-appearance: none;
  border: none;
  padding: 0;
  margin: 0;
  font-family: inherit;
  padding: var(--textFrameY) var(--textFrameX);
  background-color: var(--color-clickable);
  color: var(--color-background);
  font-size: var(--text-s);
  border-radius: var(--radius);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-s);
  &:hover {
    background-color: var(--color-clickable-muted);
  }
}

input[type="text"],
input[type="number"] {
  padding: var(--space-s) var(--space-s);
  border: 1px solid var(--color-background-muted);
  border-radius: var(--radius);
  background-color: var(--color-input-background);
  color: var(--color-text);
}
label {
  display: block;
  margin-bottom: var(--textFrameY);
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

/* select styling
https://codepen.io/bdnorris/pen/BMorpx
https://www.filamentgroup.com/lab/select-css.html */

select {
  display: block;
  font-size: var(--text-s);
  font-family: var(--font-family);
  font-weight: normal;
  color: var(--color-text);
  line-height: 1.3;
  padding: 0.6em 1.4em 0.5em 0.8em;
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
  margin: 0;
  border: 1px solid var(--color-background-muted);
  box-shadow: var(--shadow-s);
  border-radius: var(--radius);
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background-color: var(--color-input-background);
  background-image: url("data:image/svg+xml;charset=US-ASCII,<svg width='13px' height='7px' viewBox='0 0 13 7' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'><polygon id='Triangle' fill='%23233851' transform='translate(6.500000, 3.250000) rotate(-180.000000) translate(-6.500000, -3.250000) ' points='6.5 1.13686838e-13 13 6.5 0 6.5'></polygon></g></svg>"),
    linear-gradient(to bottom, var(--color-input-background) 0%, var(--color-input-background) 100%);
  background-repeat: no-repeat, repeat;
  background-position: right 0.7em top 50%, 0 0;
  background-size: 13px auto, 100%;
}
select::-ms-expand {
  display: none;
}
select:hover {
  border-color: var(--color-clickable);
}
select:focus {
  border-color: var(--color-background-muted);
  box-shadow: var(--shadow);
  /* box-shadow: var(--shadow) -moz-mac-focusring; */
  color: var(--color-text);
  outline: none;
}
select option {
  font-weight: normal;
}

@media (prefers-color-scheme: dark) {
  select {
    background-image: url("data:image/svg+xml;charset=US-ASCII,<svg width='13px' height='7px' viewBox='0 0 13 7' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'><polygon id='Triangle' fill='%23FFF6F1' transform='translate(6.500000, 3.250000) rotate(-180.000000) translate(-6.500000, -3.250000) ' points='6.5 1.13686838e-13 13 6.5 0 6.5'></polygon></g></svg>"),
    linear-gradient(to bottom, var(--color-input-background) 0%, var(--color-input-background) 100%);
  }
  
}